{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Container/Container.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","services/picture-api.js","components/Container/Container.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","pictureName","handleNameChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","Container","children","ImageGalleryItem","src","tags","largeImageURL","onSetImageData","openModal","alt","ImageGalleryItemImage","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","Button","onLoadMore","LoaderSpinner","Loader","color","height","width","timeout","ImageGallery","picture","status","showModal","data","hits","prevState","scrollToBottom","catch","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","setImageData","prevProps","message","map","index","webformatURL","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.475b0fcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__29KLH\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1BajE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1_uyr\",\"Modal\":\"Modal_Modal__2Saxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1bTnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__Z0yYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2-1Nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__26zPG\"};","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    pictureName: '',\r\n  };\r\n  handleNameChange = event => {\r\n    this.setState({ pictureName: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.pictureName.trim() === '') {\r\n      return toast.error('Enter a name for the picture!');\r\n    }\r\n    this.props.onSubmit(this.state.pictureName);\r\n    this.setState({ pictureName: ' ' });\r\n  };\r\n\r\n  render() {\r\n    const { pictureName } = this.state;\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            name=\"pictureName\"\r\n            value={pictureName}\r\n            onChange={this.handleNameChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","function fetchImages({ pictureName, page }) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?key=18692705-ed4727d48f1212ef902c664a7&q=${pictureName}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нет картинки по названию ${pictureName}`));\r\n  });\r\n}\r\n\r\nexport default fetchImages;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({\r\n  src,\r\n  tags,\r\n  largeImageURL,\r\n  onSetImageData,\r\n  openModal,\r\n}) => {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={src}\r\n        alt={tags}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={() => {\r\n          openModal();\r\n          onSetImageData({ largeImageURL, tags });\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string,\r\n  onSetImageData: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <button onClick={() => onLoadMore()} type=\"button\" className={s.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport s from './Loader.module.css';\r\nexport default class LoaderSpinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={s.Loader}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport s from './ImageGallery.module.css';\r\n\r\nimport fetchImages from '../../services/picture-api';\r\n\r\nimport Container from '../Container';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\nimport LoaderSpinner from '../Loader';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    picture: [],\r\n    error: null,\r\n    status: 'idle',\r\n    page: 1,\r\n    showModal: false,\r\n    largeImageURL: null,\r\n    tags: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchImages();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.pictureName;\r\n    const nextName = this.props.pictureName;\r\n    if (prevName !== nextName) {\r\n      this.setState({ status: 'pending', page: 1, picture: [] });\r\n      this.fetchImages();\r\n    }\r\n  }\r\n  fetchImages = () => {\r\n    const { pictureName } = this.props;\r\n    const { page } = this.state;\r\n    this.setState({ status: 'pending' });\r\n    fetchImages({ pictureName, page })\r\n      .then(data => {\r\n        const { hits } = data;\r\n        this.setState(prevState => ({\r\n          picture: [...prevState.picture, ...hits],\r\n          page: prevState.page + 1,\r\n          status: 'resolved',\r\n        }));\r\n        if (page !== 1) {\r\n          this.scrollToBottom();\r\n        }\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }));\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  setImageData = ({ largeImageURL, tags }) => {\r\n    this.setState({ largeImageURL, tags });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      largeImageURL,\r\n      showModal,\r\n      picture,\r\n      error,\r\n      status,\r\n    } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <h2>Random picture</h2>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <LoaderSpinner />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <h2>{error.message}</h2>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <Container>\r\n          <ul className={s.ImageGallery}>\r\n            {picture.map(({ webformatURL, largeImageURL, tags }, index) => (\r\n              <ImageGalleryItem\r\n                openModal={this.toggleModal}\r\n                onSetImageData={this.setImageData}\r\n                key={index}\r\n                src={webformatURL}\r\n                largeImageURL={largeImageURL}\r\n                tags={tags}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <Button onLoadMore={this.fetchImages} />\r\n          {showModal && (\r\n            <Modal onClose={this.toggleModal}>\r\n              <img src={largeImageURL} alt={tags} />\r\n            </Modal>\r\n          )}\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    pictureName: '',\n  };\n\n  handleFormSubmit = pictureName => {\n    this.setState({ pictureName });\n  };\n  render() {\n    const { pictureName } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery pictureName={pictureName} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__3Fxt5\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2_eX1\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__qI066\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3THt3\",\"Searchbar\":\"Searchbar_Searchbar__gAumi\"};"],"sourceRoot":""}